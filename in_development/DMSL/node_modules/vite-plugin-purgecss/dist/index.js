var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
module.exports = __toCommonJS(src_exports);
var import_purgecss = require("purgecss");
var src_default = (options) => {
  let _html = "";
  return {
    name: "vite-plugin-purgecss",
    enforce: "post",
    transformIndexHtml(html) {
      _html += html;
    },
    async generateBundle(_options, bundle) {
      const cssFiles = Object.keys(bundle).filter((key) => key.endsWith(".css"));
      if (!cssFiles)
        return;
      for (const file of cssFiles) {
        const purged = await new import_purgecss.PurgeCSS().purge({
          content: [{ raw: _html + " " + Object.entries(bundle).map(([k, v]) => {
            return v.code;
          }).join("; "), extension: "html" }],
          css: [{ raw: bundle[file].source }],
          ...options
        });
        bundle[file].source = purged[0].css;
      }
    }
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
